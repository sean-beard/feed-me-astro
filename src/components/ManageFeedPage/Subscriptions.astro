---
import { get } from "utils/api";
import { getAuthToken } from "utils/getAuthToken";
import type { Subscription } from "utils/types";
import { SubscriptionRow } from "./SubscriptionRow";

interface SubscriptionsData {
  status: number;
  subscriptions: Subscription[];
}

let status = 0;
let subscriptions: Subscription[] = [];

const token = getAuthToken(Astro.cookies);

try {
  const data = await get<SubscriptionsData>({
    path: "/subscription",
    token,
  });

  status = data.status;
  subscriptions = data.subscriptions;
} catch (error) {
  if (error instanceof Error) {
    status = 500;
  }
}
---

<script>
  import { registerNotificationSubscription } from "utils/serviceWorker";

  const button = document.getElementById("notif-btn");

  if (button) {
    button.addEventListener("click", () => {
      // Browser-specific notification subscription
      registerNotificationSubscription();
    });
  }
</script>

<div>
  <h2>Your subscriptions</h2>

  {
    status === 500 && (
      <h3 class="error">
        Oops! There was an issue getting your subscriptions. Please try again
        later.
      </h3>
    )
  }

  {
    subscriptions.length > 0 && (
      <button id="notif-btn" class="btn">
        Get notified
      </button>
    )
  }

  {
    subscriptions.length > 0 && (
      <ul>
        {subscriptions.map((subscription) => {
          return (
            <SubscriptionRow
              client:visible
              subscription={subscription}
              token={token}
            />
          );
        })}
      </ul>
    )
  }

  {
    !subscriptions.length && (
      <p>Nothing to see here! Subscribe to your first feed above.</p>
    )
  }
</div>

<style>
  p {
    font-size: 1.25em;
  }

  .error {
    color: maroon;
    font-size: 1.5em;
  }
</style>
