---
interface User {
  name: string;
  email: string;
  token: string;
}

interface AuthCallbackData {
  status: number;
  user: User;
}

const url = Astro.request.url;
const search = url.substring(url.indexOf("?"));
const urlParams = new URLSearchParams(search);
const code = urlParams.get("code");

if (code) {
  const baseApiUrl = import.meta.env.PUBLIC_BASE_API_URL;
  const url = `${baseApiUrl}/auth/github/callback?code=${code}`;

  const response = await fetch(url);
  const data: AuthCallbackData = await response.json();

  if (data.status === 200) {
    Astro.cookies.set("user", data.user, { path: "/" });
  }

  // TODO: handle error
  // {message: 'Error signing in.', status: 500}

  return Astro.redirect("/");
}
---
